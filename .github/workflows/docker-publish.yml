name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: movement-engineer-foundation-site

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        
      - name: Get theme
        run: mkdir -p themes && cd themes && git clone https://github.com/dewittn/hugo-html5up-alpha.git && cd ..
        
      - name: Hugo GitHub Action
        uses: crazy-max/ghaction-hugo@v1.3.3
        with:
          version: latest
          extended: true

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
        
      - name: Get theme
        run: mkdir -p themes && cd themes && git clone https://github.com/dewittn/hugo-html5up-alpha.git && cd ..
        
      - name: Hugo GitHub Action
        uses: crazy-max/ghaction-hugo@v1.3.3
        with:
          version: latest
          extended: true

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into Container Registry
        run: doctl registry login

      - name: Push image to Container Registry
        run: |
          IMAGE_ID=${{ secrets.CONTAINER_REGISTRY }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
      - name: Get outputs
        id: build_ouputs
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

    outputs:
      branch_name: ${{ steps.build_outputs.branch }}
  
  deploy:
    needs: [push]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && needs.push.outputs.branch_name == 'master'
    name: Deploy to Cluster
    steps:
      - run: echo "would deploy here"
